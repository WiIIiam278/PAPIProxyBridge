plugins {
    id 'fabric-loom' version "$fabric_loom_version"
}

apply plugin: 'fabric-loom'
loom.serverOnlyMinecraftJar()

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
        sourceCompatibility = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://maven.nucleoid.xyz' } // PlaceholderAPI
}

dependencies {
    minecraft "com.mojang:minecraft:$fabric_minecraft_version"
    mappings "net.fabricmc:yarn:$fabric_yarn_mappings:v2"
    modImplementation "net.fabricmc:fabric-loader:$fabric_loader_version"

//    modImplementation include("net.kyori:adventure-api:4.17.0")

    shadow implementation ('io.lettuce:lettuce-core:6.5.2.RELEASE')
    shadow implementation ('de.exlll:configlib-yaml:4.5.0')

    modCompileOnly "net.fabricmc.fabric-api:fabric-api:$fabric_api_version"
    modCompileOnly "eu.pb4:placeholder-api:2.3.0+"
    modImplementation include("net.kyori:adventure-platform-fabric:6.2.0")

    compileOnly "net.kyori:adventure-text-serializer-gson:4.17.0"

    shadow project(path: ":common")
}

shadowJar {
    configurations = [project.configurations.shadow]
    destinationDirectory.set(file("$projectDir/build/libs"))

    exclude('net.fabricmc:.*')
    exclude('net.kyori:.*')
    exclude '/mappings/*'

    relocate 'net.jodah', 'net.william278.papiproxybridge.libraries'

    minimize()
}

remapJar {
    dependsOn tasks.shadowJar
    mustRunAfter tasks.shadowJar
    inputFile = shadowJar.archiveFile.get()
    addNestedDependencies = true

    destinationDirectory.set(file("$rootDir/target/"))
    archiveClassifier.set('')

}

shadowJar.finalizedBy(remapJar)